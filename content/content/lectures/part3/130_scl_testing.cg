---
title: "Testing Scalability"
desc: How to approach the analysis of scaling, in particular for nanoTwitter
slides: true
---

:h3 Logistics
* Attendance code: 
* Review  [bcrypt usage](https://github.com/bcrypt-ruby/bcrypt-ruby)
* Review [sinatra_hello_service](https://github.com/pitosalas/sinatra_hello_service)

:slide_title General Notes on Review of your code so far
* There should be a test/ directory with tests written prefarably in Minitest although RSpec is ok too
* We will try and run your test, so make sure your readme gives instructions if they are anything other than `rake test`
* Remember the change history in your Readme with team members' contribution, who worked on what. 
* We are continuing for a little bit longer on the previous two lectures.
* Exercise: Write a test script for a class that is designed to take care of the parsing of a tweet, and extracting #hashtages, @mentions, and anything els

:slide_title What does scaling mean for nanoTwitter?

* What kinds of activities will likely demonstrate a scale problem?
* Why would each of these possibly challenge scalability?
  1. Display of the logged in page
  1. Performing a single tweet
  1. Using the API

:slide_title Discussion: where in the code will we find problems?
* When displaying a single page requires many database accesses?
* When loading a page requires server to send many megabytes of html?
* When displaying a single page for some reason takes a lot of time?
* What are your goals for nanoTwitter?

:callout :small, "Discuss", " Each team have a discussion and report out where you think you have to be careful about scaling and what techniques or ideas you have which may help (or harm) scale."

:topic_include :nt_load_testing

:lecture_end
